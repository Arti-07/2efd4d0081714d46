import asyncio

from src.agent.core.career_navigator_agent import CareerNavigatorAgent

async def main():

    test_input = """
    "ENTP-T": {
        "name": "–ü–æ–ª–µ–º–∏—Å—Ç (–¢—É—Ä–±—É–ª–µ–Ω—Ç–Ω—ã–π)",
        "description": "–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –º—ã—Å–ª–∏—Ç–µ–ª—å, –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∏—â—É—â–∏–π —É–ª—É—á—à–µ–Ω–∏—è.",
        "full_description": "–¢—É—Ä–±—É–ª–µ–Ω—Ç–Ω—ã–µ –ü–æ–ª–µ–º–∏—Å—Ç—ã —Å–æ—á–µ—Ç–∞—é—Ç –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ —Å –∂–µ–ª–∞–Ω–∏–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞—Ç—å—Å—è. –û–Ω–∏ –±–æ–ª–µ–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã –≤ —Å–ø–æ—Ä–µ –∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –∫ —Ä–µ–∞–∫—Ü–∏—è–º –¥—Ä—É–≥–∏—Ö. –û—Ç–∫—Ä—ã—Ç—ã –∫ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∏ –≥–æ—Ç–æ–≤—ã –ø–µ—Ä–µ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–≤–æ–∏ –∏–¥–µ–∏.",
        "strengths": "–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å, –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –∫ –∫—Ä–∏—Ç–∏–∫–µ, –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å, —ç–Ω–µ—Ä–≥–∏—á–Ω–æ—Å—Ç—å",
        "weaknesses": "–ú–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–ø–æ—Å—Ç–æ—è–Ω–Ω—ã, —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∫–æ–π, —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ –Ω–µ—É–¥–∞—á–∞–º",
        "career_advice": "–ü–æ–¥—Ö–æ–¥—è—Ç –¥–∏–Ω–∞–º–∏—á–Ω—ã–µ —Ä–æ–ª–∏, –≥–¥–µ —Ü–µ–Ω–∏—Ç—Å—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –≥–∏–±–∫–æ—Å—Ç—å –º—ã—à–ª–µ–Ω–∏—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å –º–µ–Ω—Ç–æ—Ä–∞–º–∏ –∏–ª–∏ –≤ –∫–æ–º–∞–Ω–¥–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é. –†–∞–∑–≤–∏–≤–∞–π—Ç–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤.",
        "careers": ["–ò–Ω–Ω–æ–≤–∞—Ç–æ—Ä", "–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä", "–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç", "–ü—Ä–æ–¥–∞–∫—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä", "–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å"]
    },
    "–í–æ–¥–æ–ª–µ–π": {
        "dates": [(1, 20), (2, 18)],
        "element": "–í–æ–∑–¥—É—Ö",
        "quality": "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π",
        "traits": "–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π, –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π, –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–π. –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º—ã—Å–ª–∏—Ç–µ–ª—å –∏ —Ä–µ—Ñ–æ—Ä–º–∞—Ç–æ—Ä.",
        "careers": ["–ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å", "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç", "–£—á–µ–Ω—ã–π", "–ê–∫—Ç–∏–≤–∏—Å—Ç", "–ê—Å—Ç—Ä–æ–ª–æ–≥"],
        "strengths": "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å, –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å, –≥—É–º–∞–Ω–Ω–æ—Å—Ç—å, –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å",
        "challenges": "–û—Ç—Å—Ç—Ä–∞–Ω–µ–Ω–Ω–æ—Å—Ç—å, —É–ø—Ä—è–º—Å—Ç–≤–æ, –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å, —Ö–æ–ª–æ–¥–Ω–æ—Å—Ç—å",
        "compatible": ["–ë–ª–∏–∑–Ω–µ—Ü—ã", "–í–µ—Å—ã", "–û–≤–µ–Ω", "–°—Ç—Ä–µ–ª–µ—Ü"]
    }
    """

    agent = CareerNavigatorAgent(
        input_text=test_input.strip(),
        model="Qwen/Qwen3-235B-A22B-Instruct-2507",
        temperature=0.3,
        top_p=0.9,
        max_tokens=2048,
        presence_penalty=0.0,
        frequency_penalty=0.0,
    )

    try:
        career = await agent.createCareer()
        print("\nüìù –ö–∞—Ä—å–µ—Ä–Ω—ã–π –ø—É—Ç—å:")
        print(career)
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    asyncio.run(main())

