import asyncio
import json

from src.agent.core.profession_validator_agent import ProfessionValidatorAgent


async def test_valid_profession():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–Ω–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏"""
    print("\n=== –¢–µ—Å—Ç 1: –í–∞–ª–∏–¥–Ω–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è (Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫) ===")
    
    agent = ProfessionValidatorAgent(
        profession_title="Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
        temperature=0.3,
        max_tokens=2048,
    )
    
    result = await agent.validate_profession()
    print(json.dumps(result, ensure_ascii=False, indent=2))


async def test_invalid_profession():
    """–¢–µ—Å—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–π/—Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏"""
    print("\n=== –¢–µ—Å—Ç 2: –ù–µ–≤–∞–ª–∏–¥–Ω–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è (–ú–∞–≥) ===")
    
    agent = ProfessionValidatorAgent(
        profession_title="–ú–∞–≥",
        temperature=0.3,
        max_tokens=2048,
    )
    
    result = await agent.validate_profession()
    print(json.dumps(result, ensure_ascii=False, indent=2))


async def test_rare_profession():
    """–¢–µ—Å—Ç —Ä–µ–¥–∫–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏"""
    print("\n=== –¢–µ—Å—Ç 3: –†–µ–¥–∫–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è (–ö–æ—Å–º–æ–±–∏–æ–ª–æ–≥) ===")
    
    agent = ProfessionValidatorAgent(
        profession_title="–ö–æ—Å–º–æ–±–∏–æ–ª–æ–≥",
        temperature=0.3,
        max_tokens=2048,
    )
    
    result = await agent.validate_profession()
    print(json.dumps(result, ensure_ascii=False, indent=2))


async def test_general_profession():
    """–¢–µ—Å—Ç —Å–ª–∏—à–∫–æ–º –æ–±—â–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏"""
    print("\n=== –¢–µ—Å—Ç 4: –°–ª–∏—à–∫–æ–º –æ–±—â–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è (–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç) ===")
    
    agent = ProfessionValidatorAgent(
        profession_title="–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç",
        temperature=0.3,
        max_tokens=2048,
    )
    
    result = await agent.validate_profession()
    print(json.dumps(result, ensure_ascii=False, indent=2))


async def test_popular_profession():
    """–¢–µ—Å—Ç –ø–æ–ø—É–ª—è—Ä–Ω–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏"""
    print("\n=== –¢–µ—Å—Ç 5: –ü–æ–ø—É–ª—è—Ä–Ω–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è (–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤) ===")
    
    agent = ProfessionValidatorAgent(
        profession_title="–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤",
        temperature=0.3,
        max_tokens=2048,
    )
    
    result = await agent.validate_profession()
    print(json.dumps(result, ensure_ascii=False, indent=2))


async def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π\n")
    
    try:
        # –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ –æ–¥–Ω–æ–º—É –∏–ª–∏ –≤—Å–µ –≤–º–µ—Å—Ç–µ
        await test_valid_profession()
        await test_invalid_profession()
        # await test_rare_profession()
        # await test_general_profession()
        # await test_popular_profession()
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")


if __name__ == "__main__":
    asyncio.run(main())

